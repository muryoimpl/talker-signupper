-# frozen_string_literal: true

.mdl-layout__header.mdl-layout__header--waterfall
  .mdl-layout__header-row
    %span.mdl-layout-title
      %span
        %a.text-like{href: '/'} Talker SignUpper

    / Add spacer, to align navigation to the right in desktop
    .mdl-layout-spacer
    %span.bold Enter existing room
    .mdl-textfield.mdl-js-textfield.ml10.mdl-textfield--floating-label
      %input.p-room__name-input{type: 'text', id: 'existing-name', value: @name, maxlength: 35}
      %button{class: "ml10 mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect #{@name ? nil : 'disabled'}", id: 'enter'}
        Enter room
    - if flash[:not_exist_alert]
      %span.header-error
        = flash[:not_exist_alert]

.mdl-layout__content
  .p-room__tab-panel.is-active.mt10
  %section.p-room__section--center.mdl-grid
    = form_for @room, url: rooms_path, method: :post, html: {class: 'p-room__card--wide'} do |f|
      .mdl-card__title
        %h2.mdl-card__title-text Create yout talk room
      .mdl-card__supporting-text.p-room__card-body
        - # %span.bold #{request.protocol}#{request.host}#{":#{request.port}" if Rails.env.development?}/rooms/
        .mdl-textfield.mdl-js-textfield.ml5.p-room__name
          = f.text_field :name, class: 'mdl-textfield__input', id: 'room-name', pattern: '[0-9a-zA-Z!$\+\-@_]{4,30}', autocomplete: :off
          = f.label :name, class: 'mdl-textfield__label', value: 'Room name'
        %p available characters: number, alphabet, !$+-@_

        .mdl-textfield.mdl-js-textfield.ml5.p-room__password
          = f.password_field :password, class: 'mdl-textfield__input', id: 'room-password', autocomplete: :off
          = f.label :password, class: 'mdl-textfield__label', value: 'Password'

        .p-room__error
          - unless @room.errors.empty?
            %ul.mdl-list
              - @room.errors.full_messages.each do |message|
                %li.mdl-list__item
                  %span.p-room__error-item #{message}

          - if flash[:alert]
            %ul.mdl-list
              %li.mdl-list__item
                %span.p-room__error-item #{flash[:alert]}

      .mdl-card__actions
        %button.mdl-button.mdl-js-button.mdl-button--raised.mdl-button--accent.p-room__button--create
          Create new room

  .mdl-grid.p-room__typography-area
    .p-room__typography-text.mdl-cell.mdl-cell--6-col
      .mdl-typography--display-2.mdl-typography--font-bold
        .p-room__typography-text--title Talker SignUpper is a tool for Lightning Talks
        .mdl-typography--headline.mdl-typography--font-thin.tac
          %p.mdl-typography--headline.mdl-typography--font-thin.mt10.pt20
            room to Talker SignUpper!
          %p.mdl-typography--font-thin
            Talker SignUpper helps your talk event. Take it easy! Let's start your Lightning Talks event.


  .p-room__typography-text--title
    .mdl-typography--font-light.mdl-typography--display-1-color-contrast.pt20
      Features
    %ul.p-room__list
      %li.mdl-list__item
        %i.material-icons.mdl-list__item-icon checkbox
        create room and share the URL
      %li.mdl-list__item
        %i.material-icons.mdl-list__item-icon checkbox
        register talk content and reflect it in realtime
      %li.mdl-list__item
        %i.material-icons.mdl-list__item-icon checkbox
        shuffle order in your room
      %li.mdl-list__item
        %i.material-icons.mdl-list__item-icon checkbox
        vote favorite talk in your room

.p-room__spacer

:javascript
  (function(){
    document.getElementById('enter').addEventListener('click', function() {
      var name = document.getElementById('existing-name').value;
      if (name) window.location.href = '/rooms/' + name;
    });

    var $existingName = document.getElementById('existing-name');
    $existingName.addEventListener('focus', function() {
      var elm = document.getElementById('enter');
      elm.classList.remove('disabled');
    })

    $existingName.addEventListener('blur', function() {
      if (!$existingName.value) {
        var elm = document.getElementById('enter');
        var headerError = document.querySelector('.header-error')
        if (headerError) {
          headerError.textContent = null;
        }
      }
    })
  })()
